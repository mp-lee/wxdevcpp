<?xml version="1.0" encoding="ISO-8859-1" ?> 
<!-- Compiler Options Default Template -->
<!-- Created: 5 October 2005 by Tony Reina -->
<!-- Licensed under the Gnu Public License for wx-devcpp -->
<!-- $Id -->
<options name="compiler">

<!--  **************  Microsoft VC++ Compiler **************   -->
<compiler name="ms-vc++">
<default>false</default>
<libparamslabel>/LIBPATH:</libparamslabel>
<includeparamslabel>/I</includeparamslabel>
<compilerlabel>/nologo /c</compilerlabel>
<compileroutputlabel>/Fo</compileroutputlabel>
<checksyntaxcompilerlabel>/nologo /c</checksyntaxcompilerlabel>
<checksyntaxoutputlabel>/OUT:nul</checksyntaxoutputlabel>

<category name="Optimization">

  <switch name="Optimize for">
    <enabled>true</enabled>
    <fieldtype>enumerated</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <options>Neither=,Speed (/O2)=/O2,Space (/O1)=/O1</options>
    <selection>0</selection>
    <default>0</default>
    <label>Optimize for (/O1,2)</label>
  </switch>

  <switch name="Favour">
    <enabled>true</enabled>
    <fieldtype>enumerated</fieldtype>
    <switchtype>c,c++</switchtype>
    <options>Neither=,Speed (/Ot)=/Ot,Space (/Os)=/Os</options>
    <selection>0</selection>
    <default>0</default>
    <excludefrom></excludefrom>
    <label>Favour speed, space (/Ot,s)</label>
  </switch>

  <switch name="/Og">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Enable global optimization (/Og)</label>
  </switch>

  <switch name="/Oa">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Assume aliasing (/Oa)</label>
  </switch>

  <switch name="/Oi">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Enabled intrinsic functions (/Oi)</label>
  </switch>

  <switch name="/Ow">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Assume cross-function aliasing (/Ow)</label>
  </switch>

  <switch name="/GA">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Optimize for windows program (/GA)</label>
  </switch>

  <switch name="/Oy">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Enable frame pointer omission (/Oy[-])</label>
  </switch>

  <switch name="/Ob">
    <enabled>false</enabled>
    <default>0</default>
    <fieldtype>integer</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Inline expansion (/Ob[n])</label>
  </switch>

  <switch name="/Od">
    <enabled>true</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Disable optimizations (/Od)</label>
  </switch>

  <switch name="/Op">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Improve floating point consistency (/Op[-])</label>
  </switch>

  <switch name="/Os">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Favor code space (/Os)</label>
  </switch>

  <switch name="/Ot">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Favor code speed (/Ot)</label>
  </switch>

  <switch name="/Ox">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Maximum options (/Ox)</label>
  </switch>

</category>
<category name="Code Generation">

  <switch name="/G">
    <enabled>true</enabled>
    <fieldtype>enumerated</fieldtype>
    <switchtype>c,c++</switchtype>
    <options>Blended model (/GB)=/GB,80386 (/G3)=/G3,
             80486 (/G4)=4,Pentium (/G5)=/G5,PPro/P-II/P-III (/G6)=/G6,
             Pentium 4 or Athlon (/G7)=/G7</options>
    <selection>0</selection>
    <default>0</default>
    <excludefrom></excludefrom>
    <label>Optimize for (/G[n])</label>
  </switch>

  <switch name="Calling convention">
     <enabled>false</enabled>
     <fieldtype>enumerated</fieldtype>
     <switchtype>c,c++</switchtype>
     <excludefrom></excludefrom>
     <label>Calling convention</label>
     <options>None=,__cdecl (/Gd)=/Gd,__fastcall (/Gr)=/Gr,__stdcall (/Gz)=/Gz</options>
     <selection>0</selection>
     <default>0</default>
  </switch>

  <switch name="String Pooling">
     <enabled>false</enabled>
     <fieldtype>enumerated</fieldtype>
     <switchtype>c,c++</switchtype>
     <excludefrom></excludefrom>
     <label>String Pooling</label>
     <options>Disable=,Enable (/Gf)=/Gf,Enable Read-Only (/GF)=/GF</options>
     <selection>0</selection>
     <default>0</default>
  </switch>

  <switch name="/Gs">
    <enabled>true</enabled>
    <fieldtype>integer</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Control stack checking calls (/Gs)</label>
  </switch>

  <switch name="/arch:">
  <!-- minimum CPU architecture requirements, one of: -->
  <!--       SSE - enable use of instructions available with SSE enabled CPUs -->
  <!--       SSE2 - enable use of instructions available with SSE2 enabled CPUs -->
     <enabled>false</enabled>
     <fieldtype>enumerated</fieldtype>
     <switchtype>c,c++</switchtype>
     <excludefrom></excludefrom>
     <label>Minimum CPU architecture requirements (/arch:)</label>
     <options>None=,SSE=/arch:SSE,SSE2=/arch:SSE2</options>
     <selection>0</selection>
     <default>0</default>
  </switch>

  <switch name="Common Language Runtime">
     <enabled>false</enabled>
     <fieldtype>enumerated</fieldtype>
     <switchtype>c,c++</switchtype>
     <excludefrom></excludefrom>
     <label>String Pooling</label>
     <options>Default=,Compile for CLR (/clr)=/clr,No assembly (clr:noAssembly)=/clr:noAssembly</options>
     <selection>0</selection>
     <default>0</default>
  </switch>

  <switch name="Exception handling">
     <enabled>false</enabled>
     <fieldtype>enumerated</fieldtype>
     <switchtype>c++</switchtype>
     <excludefrom></excludefrom>
     <label>Exception handling</label>
     <options>No Exceptions=,C++ Exceptions (no SEH)=/EHs,C++ Exceptions (with SEH)=/EHa</options>
     <selection>0</selection>
     <default>0</default>
  </switch>


  <switch name="/Gh">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Enable _penter function call (/Gh)</label>
  </switch>

  <switch name="/GH">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Enable _pexit function call (/GH)</label>
  </switch>

  <switch name="/GR">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c++</switchtype>
    <excludefrom></excludefrom>
    <label>Enable C++ RTTI (/GR)</label>
  </switch>

  <switch name="/Gm">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Enable minimal rebuild (/Gm)</label>
  </switch>

  <switch name="/GL">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++,linker</switchtype>
    <excludefrom></excludefrom>
    <label>Enable linktime code generation (/GL)</label>
  </switch>

  <switch name="/QIfdiv">
    <enabled>true</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Enable Pentium FDIV fix(/QIfdiv)</label>
  </switch>

  <switch name="/QI0f">
    <enabled>true</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Enable Pentium 0x0f fix (/QI0f)</label>
  </switch>

  <switch name="/EHc">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Extern C defaults to nothrow (/EHc)</label>
  </switch>

  <switch name="/Gy">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>linker</switchtype>
    <excludefrom></excludefrom>
    <label>Seperate functions for linker (/Gy)</label>
  </switch>

  <switch name="/GT">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>User fibre-safe TLS accesses (/GT)</label>
  </switch>

  <switch name="/QIfist">
    <enabled>true</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Use FIST instead of ftol() (/QIfist)</label>
  </switch>


</category>

<category name="Code Checks">

 <switch name="Exclusive checks">
     <enabled>false</enabled>
     <fieldtype>enumerated</fieldtype>
     <switchtype>c,c++</switchtype>
     <excludefrom></excludefrom>
     <label>Exclusive checks</label>
     <options>None=,Force Stack Checks (/Ge)=/Ge,Control Stack Checking Calls (/GS)=/GS</options>
     <selection>0</selection>
     <default>0</default>
  </switch>

  <switch name="/RTC1">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Enable fast checks (/RTC1)</label>
  </switch>

  <switch name="/RTCc">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Convert to smaller type checks (/RTCc)</label>
  </switch>

  <switch name="/RTCs">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Stack frame runtime checking (/RTCs)</label>
  </switch>

  <switch name="/RTCu">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Check for variable usage (/RTCu)</label>
  </switch>

</category>
  
<category name="Language Options">

  <switch name="Debugging">
     <enabled>false</enabled>
     <fieldtype>enumerated</fieldtype>
     <switchtype>c,c++</switchtype>
     <excludefrom></excludefrom>
     <label>Debugging</label>
     <options>No debugging information=,Generate Debugging Information=/Zi /Yd,
              Edit and Continue Debugging Information (/ZI)=/ZI,
              Old-style Debugging Information (/Z7)=/Z7,
              Include line numbers only (/Zd)=/Zd</options>
     <selection>0</selection>
     <default>0</default>
  </switch>

  <switch name="/Ze">
    <enabled>true</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Enable extensions (/Ze)</label>
  </switch>

  <switch name="/Zl">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Omit library name in object file (/Zl)</label>
  </switch>

  <switch name="/Zg">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Generate function prototypes (/Zg)</label>
  </switch>

  <switch name="/Zc:forScope">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c++</switchtype>
    <excludefrom></excludefrom>
    <label>Enforce standard C++ scoping (/Zc:forScope)</label>
  </switch>

  <switch name="/Zc:wchar_t">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c++</switchtype>
    <excludefrom></excludefrom>
    <label>Make wchar_t a native type (/Zc:wchar_t)</label>
  </switch>

</category>
  
<category name="Miscellaneous">

 <switch name="Warnings">
     <enabled>true</enabled>
     <fieldtype>enumerated</fieldtype>
     <switchtype>c,c++</switchtype>
     <excludefrom></excludefrom>
     <label>Debugging</label>
     <options>Treat warnings normally=,Treat warnings as errors (/WX)=/WX,Suppress all warnings (/w)=/w</options>
     <selection>0</selection>
     <default>0</default>
  </switch>

  <switch name="/YX">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Use precompiled headers (/YX)</label>
  </switch>

 <switch name="/INCREMENTAL:NO">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Disable incremental linking (/INCREMENTAL:NO)</label>
  </switch>

</category>
                       
<category name="Output Files">
  <switch name="/Fa">
     <enabled>false</enabled>
     <fieldtype>text</fieldtype>
     <switchtype>c,c++</switchtype>
     <excludefrom></excludefrom>
     <label>Name of assembly listing file (/Fa)</label>
     <filename></filename>
  </switch>
</category>

<category name="Preprocessor">
  <switch name="/C">
  <!-- don't strip comments -->
     <enabled>true</enabled>
     <fieldtype>boolean</fieldtype>
     <switchtype>c,c++</switchtype>
     <excludefrom></excludefrom>
     <label>Don't strip comments (/C)</label>
  </switch>

  <switch name="/X">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Ignore "standard places" (/X)</label>
  </switch>
</category> 

<category name="Linker">
  <switch name="/MD">
  <!-- Link with MSVCRT.LIB -->
     <enabled>true</enabled>
     <fieldtype>boolean</fieldtype>
     <excludefrom></excludefrom>
     <switchtype>linker</switchtype>
     <label>Link with MSVCRT.LIB (/MD)</label>
  </switch>
  <switch name="/MDd">
  <!-- Link with MSVCRT.LIB debug lib-->
     <enabled>false</enabled>
     <fieldtype>boolean</fieldtype>
     <excludefrom></excludefrom>
     <switchtype>linker</switchtype>
     <label>Link with MSVCRT.LIB debug library (/MDd)</label>
  </switch>
  <switch name="/ML">
  <!-- Link with LIBC.LIB -->
     <enabled>false</enabled>
     <fieldtype>boolean</fieldtype>
     <excludefrom></excludefrom>
     <switchtype>linker</switchtype>
     <label>Link with LIBC.LIB (/ML)</label>
  </switch>
  <switch name="/MLd">
     <!-- Link with LIBC.LIB debug lib -->
     <enabled>false</enabled>
     <fieldtype>boolean</fieldtype>
     <excludefrom></excludefrom>
     <switchtype>linker</switchtype>
     <label>Link with LIBC.LIB debug library (/MLd)</label>
  </switch>
  <switch name="/MT">
     <!-- Link with LIBCMT.LIB -->
     <enabled>false</enabled>
     <fieldtype>boolean</fieldtype>
     <excludefrom></excludefrom>
     <switchtype>linker</switchtype>
     <label>Link with LIBCMT.LIB (/MT)</label>
  </switch>
  <switch name="/MTd">
     <!-- Link with LIBCMT.LIB debug lib -->
     <enabled>false</enabled>
     <fieldtype>boolean</fieldtype>
     <excludefrom></excludefrom>
     <switchtype>linker</switchtype>
     <label>Link with LIBCMT.LIB debug library (/MTd)</label>
  </switch>
  <switch name="/LD">
     <!-- Create .DLL -->
     <enabled>false</enabled>
     <fieldtype>boolean</fieldtype>
     <excludefrom></excludefrom>
     <switchtype>linker</switchtype>
     <label>Create .DLL (/LD)</label>
  </switch>
  <switch name="/LDd">
     <!-- Link with LIBCMT.LIB -->
     <enabled>false</enabled>
     <fieldtype>boolean</fieldtype>
     <excludefrom></excludefrom>
     <switchtype>linker</switchtype>
     <label>Create .DLL (/LDd)</label>
  </switch>
  <switch name="/F">
     <!-- Link with LIBCMT.LIB -->
     <enabled>false</enabled>
     <fieldtype>integer</fieldtype>
     <excludefrom></excludefrom>
     <switchtype>linker</switchtype>
     <label>Set stack size (/F)</label>
  </switch>
</category>  
</compiler>

<!-- **************    Mingw compiler  **************   -->

<compiler name="Mingw gcc">
<default>true</default>
<libparamslabel>-L</libparamslabel>
<includeparamslabel>-I</includeparamslabel>
<compilerlabel>-c </compilerlabel>
<compileroutputlabel>-o </compileroutputlabel>
<checksyntaxcompilerlabel>-S</checksyntaxcompilerlabel>
<checksyntaxoutputlabel>-o nul</checksyntaxoutputlabel>


<category name="C Compiler">

  <switch name="-ansi">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Support all ANSI standard C programs (-ansi)</label>
  </switch>

 <switch name="-traditional-cpp">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Attempt to support some aspects of traditional C preprocessors (-traditional-cpp)</label>
  </switch>

  <switch name="-w">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Inhibit all warning messages (-w)</label>
  </switch>

</category>
<category name="C++ Compiler">

  <switch name="-fno-access-control">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Turn off all access checking (-fno-access-control)</label>
  </switch>

  <switch name="-fdollar-in-identifiers">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Accept $ in identifiers (-fdollar-in-identifiers)</label>
  </switch>

</category>
<category name="Code Generation">

  <switch name="-fexceptions">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Enable exception handling (-fexceptions)</label>
  </switch>

  <switch name="-fshort-double">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Use same size for double and float (-fshort-double)</label>
  </switch>

  <switch name="-fverbose-asm">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Put extra commentary information in the generated assembly code (-fverbose-asm)</label>
  </switch>

  <switch name="-march">
     <enabled>true</enabled>
     <fieldtype>enumerated</fieldtype>
     <switchtype>c,c++,linker</switchtype>
     <excludefrom></excludefrom>
     <label>Generate instructions for the following machine (-march)</label>
     <options>None=,i386=-march=i386, i486=-march=i486, i586=-march=i586, 
              i686=-march=i686, Pentium=-march=pentium, Pentium MMX=-march=pentium-mmx,
              Pentium Pro=pentiumpro, Pentium 2=pentium2, Pentium 3=pentium3, Pentium 4=pentium4,
              K6=-march=k6, K6-2=-march=k6-2, K6-3=-march=k6-3, Athlon=-march=athlon, 
              Athlon Tbird=-march=athlon-tbird,
              Athlon 4=-march=athlon-4, Athlon XP=-march=athlon-xp, Winchip C6=-march=winchip-c6,
              Winchip 2=-march=winchip2, K8=-march=k8, C3=-march=c3, C3-2=-march=c3-2</options>
     <selection>0</selection>
     <default>0</default>
  </switch>

<switch name="-m">
     <enabled>true</enabled>
     <fieldtype>enumerated</fieldtype>
     <switchtype>c,c++,linker</switchtype>
     <excludefrom></excludefrom>
     <label>Enable use of processor specific built-in functions (-m)</label>
     <options>None=,MMX=-mmmx,SSE=-msse,SSE 2=-msse2,PNI=-mpni,3D Now=-m3dnow</options>
     <selection>0</selection>
     <default>0</default>
  </switch>

</category>
<category name="Optimization">

 <switch name="-fexpensive-optimizations">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Perform a number of minor optimizations (-fexpensive-optimizations)</label>
  </switch>

</category>

<category name="Optimization/Further Optimization">

  <switch name="-O1">
    <enabled>false</enabled>
    <isgroup>true</isgroup>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Optimize (-O1)</label>
  </switch>

  <switch name="-O2">
    <enabled>false</enabled>
    <isgroup>true</isgroup>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Optimize more (-O2)</label>
  </switch>

  <switch name="-O3">
    <enabled>false</enabled>
    <isgroup>true</isgroup>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Optimize best (-O3)</label>
  </switch>

</category>

<category name="Code profiling">

 <switch name="-pg">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++</switchtype>
    <excludefrom></excludefrom>
    <label>Generate profiling info for analysis (-pg)</label>
  </switch>

</category>

<category name="Linker">

 <switch name="-lobjc">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>linker</switchtype>
    <excludefrom></excludefrom>
    <label>Link an Objective C program (-lobjc)</label>
  </switch>

  <switch name="-g3">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++,linker</switchtype>
    <excludefrom></excludefrom>
    <label>Generate debugging information (-g3)</label>
  </switch>

  <switch name="-nostdlib">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++,linker</switchtype>
    <excludefrom></excludefrom>
    <label>Do not use standard system startup files or libraries (-nostdlib)</label>
  </switch>

  <switch name="-mwindows">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++,linker</switchtype>
    <excludefrom></excludefrom>
    <label>Do not create a console window (-mwindows)</label>
  </switch>

 <switch name="-s">
    <enabled>false</enabled>
    <fieldtype>boolean</fieldtype>
    <switchtype>c,c++,linker</switchtype>
    <excludefrom></excludefrom>
    <label>Strip executable (-s)</label>
  </switch>

</category>
</compiler>
</options>

